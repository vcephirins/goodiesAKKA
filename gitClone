#!/bin/bash -f
#
#set -x

typeset vUser=""
typeset vMail=""
typeset vProject=""
typeset vProjectDir=""
typeset vServer="git@gitlab.cnes.fr:Valdo"

function fGetUsers {
memoSH git "user" | awk '
/git config user.name/ {name=$4; next;}
/git config user.email/ {mail=$4;};
{
   if (name != "")  {printf("%s:%s\n", name, mail)}
   name = ""
}'
}

function fSyntax {
   echo "gitClone [-s server] <project[:repDest]> <user[:mail]>";
   echo "users   : ";
   fGetUsers
   echo
   echo "Server  : ${vServer}"
   echo
   echo "Project : ${vProject}"
   echo "     ou   outils-publics/${vProject}"
   echo "     ou   outils-prives/${vProject}"
   echo
   echo "Rep Dest : ${vProjectDir}"
}

#--- Recuperation des options
OPTIND=1
while getopts hp:s: SCRIPT_OPTIONS
do
   case ${SCRIPT_OPTIONS} in
      s) vServer="${OPTARG%/}"
         ;;
      h | \?) fSyntax
         exit 0
         ;;
      *) fSyntax
         exit 1
         ;;
   esac
done

shift $((${OPTIND} - 1))

# CONFIRM function
##################
function fConfirm {

    typeset -l reponse='';
    while [[ ${reponse} = '' ]]
    do
       echo ""
       echo ${1:-Confirm}" (y/n/q)."
       printf "Default value 'y' : ";read reponse
       echo ""
       case ${reponse:=y} in
          y) return 0;;
          n) return 1;;
          q) echo "  => Break\n";
             return 2;;
          *) echo "unauthorized value."
             echo "Possible values 'y', 'Y', 'n', 'N', 'q', 'Q'."
             reponse='';;
       esac
    done
}

if [[ -d .git ]]
then
   # Git deja initialise
   git conf user
   git remotes
   git logs
   git status
  
   exit 0
fi

vProject="${1%:*}"
vProject="${vProject:-ProjectName}"
vProject="${vProject#/}"
vProject="${vProject%.git}"
vProjectDir="${1#*:}"
vProjectDir="${vProjectDir:=vProject}"
vProjectDir="${vProjectDir##*/}"
vProjectDir="${vProjectDir%.git}"
shift

vUser="${1%:*}"
vMail="${1#${vUser}}"
vMail="${vMail#:}"

if [[ "${vUser}" == "" ]]
then
   # Le pattern est obligatoire
   fSyntax
   exit 1
fi;

# Recherche du mail
if [[ "${vMail}" == "" ]]
then
   vUserMail=$( fGetUsers | grep -i ${vUser} )

   # Le mail est obligatoire
   vUser="${vUserMail%:*}"
   vMail="${vUserMail#${vUser}}"
   vMail="${vMail#:}"

   if [[ "${vMail}" == "" ]]
   then
      fSyntax
      exit 1
   fi
fi;

echo "Clone du depot GIT"
echo "   User    : ${vUser}"
echo "   Mail    : ${vMail}"
echo "   Url     : ${vServer}/${vProject}.git"
echo "   Dest    : ${vProjectDir}"

fConfirm "Clone git" || exit 0

git clone "${vServer}/${vProject}.git" ${vProjectDir}
cd ${vProjectDir}

git config user.name ${vUser}
git config user.email ${vMail}

git status
